name: Checks

on:
  pull_request: 
    branches: [master]

# This workflow runs for not-yet-reviewed external contributions and so it
# intentionally has no write access and only limited read access to the
# repository.
permissions:
  contents: read

jobs:
  lint:
    name: "Run golangci-lint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GO_VERSION: [ "1.20","1.21" ]
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.0.0

      - name: Install Go toolchain
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.GO_VERSION }}
      - name: Cache Go modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ matrix.GO_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ matrix.GO_VERSION }}
      - name: "lint"
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0

  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GO_VERSION: [ "1.20","1.21" ]
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.0.0

      - name: Install Go toolchain
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.GO_VERSION }}

      # NOTE: This cache is shared so the following step must always be
      # identical across the unit-tests, e2e-tests, and consistency-checks
      # jobs, or else weird things could happen.
      - name: Cache Go modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ matrix.GO_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ matrix.GO_VERSION }}
      - name: "Unit tests and generate coverage report"
        run: |
          go test ./...
          make cov
      - name: Upload coverage report
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4
        with:
         path: coverage.out
         name: Coverage-report-${{matrix.GO_VERSION}}
      - name: Display Coverage report
        run: go tool cover -func=coverage.out
      - name: Build go
        run: go build ./...

  unit-tests-race:
    name: "Unit Tests Race"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GO_VERSION: [ "1.20","1.21" ]
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.0.0

      - name: Install Go toolchain
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.GO_VERSION }}

      # NOTE: This cache is shared so the following step must always be
      # identical across the unit-tests, e2e-tests, and consistency-checks
      # jobs, or else weird things could happen.
      - name: Cache Go modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ matrix.GO_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ matrix.GO_VERSION }}
      - name: "Race Unit tests"
        run: |
          go test -race ./...
      - name: Race Build
        run: go build -race ./...

  consistency-checks:
    name: "Code Consistency Checks"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GO_VERSION: [ "1.20","1.21" ]
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.0.0

      - name: Install Go toolchain
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.GO_VERSION }}

      # NOTE: This cache is shared so the following step must always be
      # identical across the unit-tests and consistency-checks
      # jobs, or else weird things could happen.
      - name: Cache Go modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ matrix.GO_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ matrix.GO_VERSION }}
      - name: "go.mod and go.sum consistency check"
        run: |
          go mod tidy
          if [[ -n "$(git status --porcelain)" ]]; then
            echo >&2 "ERROR: go.mod/go.sum are not up-to-date. Run 'go mod tidy' and then commit the updated files."
            exit 1
          fi
      - name: "go vet"
        run: |
          go vet ./...
      - name: "go fmt check"
        run: |
          files=$(go fmt ./...)
          if [ -n "$files" ]; then
            echo "The following file(s) do not conform to go fmt:"
            echo "$files"
            exit 1
          fi